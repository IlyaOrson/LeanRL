[tool.poetry]
name = "cleanrl"
version = "2.0.0b1"
description = "High-quality single file implementation of Deep Reinforcement Learning algorithms with research-friendly features"
authors = ["Costa Huang <costa.huang@outlook.com>"]
packages = [
    { include = "cleanrl" },
    { include = "cleanrl_utils" },
]
keywords = ["reinforcement", "machine", "learning", "research"]
license="MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
tensorboard = "^2.10.0"
wandb = "^0.13.11"
gym = "0.23.1"
torch = ">=1.12.1"
stable-baselines3 = "2.0.0"
gymnasium = ">=0.28.1"
moviepy = "^1.0.3"
pygame = "2.1.0"
huggingface-hub = "^0.11.1"
rich = "<12.0"
tenacity = "^8.2.2"
tyro = "^0.5.10"
pyyaml = "^6.0.1"

ale-py = {version = "0.8.1", optional = true}
AutoROM = {extras = ["accept-rom-license"], version = "~0.4.2", optional = true}
opencv-python = {version = "^4.6.0.66", optional = true}
procgen = {version = "^0.10.7", optional = true}
pytest = {version = "^7.1.3", optional = true}
mujoco = {version = "<=2.3.3", optional = true}
imageio = {version = "^2.14.1", optional = true}
mkdocs-material = {version = "^8.4.3", optional = true}
markdown-include = {version = "^0.7.0", optional = true}
openrlbenchmark = {version = "^0.1.1b4", optional = true}
jax = {version = "0.4.8", optional = true}
jaxlib = {version = "0.4.7", optional = true}
flax = {version = "0.6.8", optional = true}
optuna = {version = "^3.0.1", optional = true}
optuna-dashboard = {version = "^0.7.2", optional = true}
envpool = {version = "^0.6.4", optional = true}
PettingZoo = {version = "1.18.1", optional = true}
SuperSuit = {version = "3.4.0", optional = true}
multi-agent-ale-py = {version = "0.1.11", optional = true}
boto3 = {version = "^1.24.70", optional = true}
awscli = {version = "^1.31.0", optional = true}
shimmy = {version = ">=1.1.0", optional = true}
dm-control = {version = ">=1.0.10", optional = true}
h5py = {version = ">=3.7.0", optional = true}
optax = {version = "0.1.4", optional = true}
chex = {version = "0.1.5", optional = true}
numpy = ">=1.21.6"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
atari = ["ale-py", "AutoROM", "opencv-python", "shimmy"]
procgen = ["procgen"]
plot = ["pandas", "seaborn"]
pytest = ["pytest"]
mujoco = ["mujoco", "imageio"]
jax = ["jax", "jaxlib", "flax"]
docs = ["mkdocs-material", "markdown-include", "openrlbenchmark"]
envpool = ["envpool"]
optuna = ["optuna", "optuna-dashboard"]
pettingzoo = ["PettingZoo", "SuperSuit", "multi-agent-ale-py"]
cloud = ["boto3", "awscli"]
dm_control = ["shimmy", "mujoco", "dm-control", "h5py"]

# dependencies for algorithm variant (useful when you want to run a specific algorithm)
dqn = []
dqn_atari = ["ale-py", "AutoROM", "opencv-python"]
dqn_jax = ["jax", "jaxlib", "flax"]
dqn_atari_jax = [
    "ale-py", "AutoROM", "opencv-python", # atari
    "jax", "jaxlib", "flax" # jax
]
c51 = []
c51_atari = ["ale-py", "AutoROM", "opencv-python"]
c51_jax = ["jax", "jaxlib", "flax"]
c51_atari_jax = [
    "ale-py", "AutoROM", "opencv-python", # atari
    "jax", "jaxlib", "flax" # jax
]
ppo_atari_envpool_xla_jax_scan = [
    "ale-py", "AutoROM", "opencv-python", # atari
    "jax", "jaxlib", "flax", # jax
    "envpool", # envpool
]
qdagger_dqn_atari_impalacnn = [
    "ale-py", "AutoROM", "opencv-python"
]
qdagger_dqn_atari_jax_impalacnn = [
    "ale-py", "AutoROM", "opencv-python", # atari
    "jax", "jaxlib", "flax", # jax
]

[project]
name = "leanrl"
requires-python = ">=3.8,<3.11"

[tool.pixi.project]
channels = ["conda-forge","pytorch"]
platforms = ["osx-arm64", "linux-64", "osx-64", "win-64"]

[tool.pixi.tasks]
dqn = "python leanrl/dqn.py --total-timesteps 256"
#dqn-torchcompile = "python leanrl/dqn_torchcompile.py --total-timesteps 256 --compile --cudagraphs"
dqn-jax = "python leanrl/dqn_jax.py --total-timesteps 256"
ppo = "python leanrl/ppo_continuous_action.py --num-steps 64 --total-timesteps 256"

[tool.pixi.pypi-dependencies]
gym = "==0.23.1"

[tool.pixi.dependencies]
tensorboard = ">=2.10.0,<3.0.0"
wandb = ">=0.13.11,<1.0.0"
pytorch = ">=2.0"
stable-baselines3 = "2.0.0"
gymnasium = ">=0.28.1"
moviepy = ">=1.0.3,<2.0.0"
pygame = ">=2.1,<2.2"
huggingface_hub = ">=0.11.1,<1.0.0"
rich = "<12.0"
tenacity = ">=8.2.2,<9.0.0"
tyro = ">=0.5.10,<1.0.0"
pyyaml = ">=6.0.1,<7.0.0"
numpy = ">=1.21.6"

[tool.pixi.feature.tensordict.dependencies]
tensordict = "*"  # latest version not available in conda for osx-arm64

[tool.pixi.feature.atari.dependencies]
ale-py = "0.8.1"

[tool.pixi.feature.atari.pypi-dependencies]
AutoROM = {version = ">=0.4.2,<0.5.0", extras = ["accept-rom-license"]}

[tool.pixi.feature.opencv.dependencies]
opencv-python = ">=4.6.0.66"

[tool.pixi.feature.procgen.dependencies]
procgen = ">=0.10.7"

[tool.pixi.feature.pytest.dependencies]
pytest = ">=7.1.3"

[tool.pixi.feature.mujoco.dependencies]
mujoco = "<=2.3.3"

[tool.pixi.feature.imageio.dependencies]
imageio = ">=2.14.1"

[tool.pixi.feature.docs.dependencies]
mkdocs-material = ">=8.4.3"
markdown-include = ">=0.7.0"

[tool.pixi.feature.openrlbenchmark.dependencies]
openrlbenchmark = ">=0.1.1b4"

[tool.pixi.feature.jax.pypi-dependencies]
jax = ">=0.4.11,<0.5"
jaxlib = ">=0.4.7,<0.5"
flax = ">=0.6.8,<0.10"

[tool.pixi.feature.optuna.dependencies]
optuna = ">=3.0.1"
optuna-dashboard = ">=0.7.2"

[tool.pixi.feature.envpool.dependencies]
envpool = ">=0.6.4"

[tool.pixi.feature.multi_agent.dependencies]
PettingZoo = "1.18.1"
SuperSuit = "3.4.0"
multi-agent-ale-py = "0.1.11"

[tool.pixi.feature.aws.dependencies]
boto3 = ">=1.24.70"
awscli = ">=1.31.0"

[tool.pixi.feature.shimmy.dependencies]
shimmy = ">=1.1.0"

[tool.pixi.feature.dm_control.dependencies]
dm-control = ">=1.0.10"

[tool.pixi.feature.h5py.dependencies]
h5py = ">=3.7.0"

[tool.pixi.feature.optax.dependencies]
optax = "0.1.4"

[tool.pixi.feature.chex.dependencies]
chex = "0.1.5"

[tool.pixi.environments]
dqn = []
#dqn-torchcompile = ["tensordict"]
dqn-jax = ["jax"]
ppo = ["mujoco"]
